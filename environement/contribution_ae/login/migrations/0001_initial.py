# Generated by Django 4.2.1 on 2023-09-23 16:34

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('gestion', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_reseted', models.BooleanField(default=True)),
                ('telephone', models.CharField(max_length=255, null=True)),
                ('groupe', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gestion.tutelle')),
            ],
            options={
                'verbose_name': 'utilisateur',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Mouchard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operation', models.CharField(max_length=255)),
                ('nom_table', models.CharField(max_length=255)),
                ('nom_colonne', models.CharField(max_length=255)),
                ('cle_avant', models.CharField(max_length=255)),
                ('cle_apres', models.CharField(max_length=255)),
                ('user', models.CharField(max_length=255)),
                ('valeur_avant', models.CharField(max_length=255, null=True)),
                ('valeur_apres', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Mouchard',
                'db_table': 'mouchard',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=255)),
                ('flag_envoye', models.BooleanField(default=False)),
                ('date_envoi', models.DateTimeField(null=True)),
                ('data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('destinateur', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'notification',
                'db_table': 'notification',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('code', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('libelle', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Service',
                'db_table': 'service',
            },
        ),
        migrations.CreateModel(
            name='Titre',
            fields=[
                ('code', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('libelle', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Titre',
                'db_table': 'titre',
            },
        ),
        migrations.CreateModel(
            name='Commentaire_tutelle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objet', models.CharField(max_length=1000)),
                ('commentaire', models.CharField(max_length=1000)),
                ('date_analyse', models.DateTimeField(auto_now_add=True)),
                ('date_val', models.DateTimeField(null=True)),
                ('validateur', models.CharField(max_length=1000)),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.organisation')),
                ('statut', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.statut')),
            ],
            options={
                'verbose_name': 'commentaire_tutelle',
                'db_table': 'commentaire_tutelle',
            },
        ),
        migrations.AddField(
            model_name='users',
            name='titre',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='login.titre'),
        ),
        migrations.AddField(
            model_name='users',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
